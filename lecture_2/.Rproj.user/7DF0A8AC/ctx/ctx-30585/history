# SET WORKING DIRECTORY ----
if (rstudioapi::isAvailable())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
install.packages("htmltools")
install.packages("data.table")
library(data.table)
install.packages("plotly")
library(plotly)
library(plotly)
sinstall.packages("caret")
library(caret)
# IMPORT DATA ----
## Data.frame ----
pp <- read.csv("./Lecture_03_PowerPlant2.csv")
## Data.table ----
pp <- fread("./Lecture_03_PowerPlant2.csv")
# DATA TABLE PRIMER ----
# datatable[ where, select, group by]
# dataframe[i,j]
dim(pp) # number of rows and columns
pp[1,] # first row
pp[10:15,] # rows from 10 to 15
pp[AT > 10,] # where AT > 10 (where condition)
pp[, AT] # select column
pp[, list(AT)] # select column as data.table
pp[, .(AT)] # select column as data.table
pp[, 2] # select column as data.table
pp[AT > 10, .(AT,V,PE)] # select AT, V, and PE from pp where AT > 10
pp[, mean(AT)] # mean of a column
pp[, mean(AT), EnergyMode] # mean of a column grouped by another column
pp[AT > 10, mean(AT), EnergyMode] # select mean(AT) where AT > 10 group by EnergyMode
pp[, .(AT,V)][order(AT)] # Chaining [][][][]
pp[, .(.N), EnergyMode] # Special keywords .N, .I, .SD, .GRP,
mycol <- "AT"
pp[, ..mycol] # resolve (parse) variable from outside the data.table context
# := "walruss operator"  = add a new column to the data.table
pp[, mynewvar := AT + 100] # create a new numeric variable (in-place operation)
pp
pp[, mynewcatvar := as.factor(ifelse(AT < 20, "A", "B")) ] # create a new factor variable (in-place operation) # nolint
pp[, EnergyMode := ordered(EnergyMode, levels = c("L", "M", "H"))] # convert a character to an ordered factor (in-place operation)
pp[, AT_previous := shift(AT,1)] # create a new numeric variable as shifted version of another variable, predicting the next value based on the previous one
# AT shift by 1 previous row
pp
# remove a variable (in-place operation)
pp[, mynewvar := NULL]
pp[, mynewcatvar := NULL]
pp[, AT_previous := NULL]
# EXPLORING THE DATASET (EDA) ----
pp
dim(pp) # number of rows and columns
str(pp) # structure of the data
summary(pp) # summary of the data (numeric variables only)
pp
distr <- pp[, .N, EnergyMode] # distribution of the target variable EnergyMode(how many observations per category)
distr
install.packages("plotly")
install.packages("plotly")
library(plotly)
#namespace 'vctrs' 0.4.2 is being loaded, but >= 0.5.0 is required
install.packages("vctrs")
#namespace 'htmltools' 0.5.3 is already loaded, but >= 0.5.4 is required
install.packages("htmltools")
plot_ly(distr, x = ~EnergyMode, y = ~N, type = "bar")
